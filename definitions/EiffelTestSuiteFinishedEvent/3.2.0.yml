# Copyright 2017-2024 Ericsson AB and others.
# For a full list of individual contributors, please see the commit history.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
$schema: http://json-schema.org/draft-04/schema#
_name: EiffelTestSuiteFinishedEvent
_version: 3.2.0
_abbrev: TSF
_description: |-
  The EiffelTestSuiteFinishedEvent declares that a previously started test suite (declared by [EiffelTestSuiteStartedEvent](./EiffelTestSuiteStartedEvent.md)) has finished and reports the outcome.

  Note that while similar, the __data.outcome__ object is different from that of [EiffelActivityFinishedEvent](./EiffelActivityFinishedEvent.md). The outcome of the test suite reports not only the conclusion of the test suite execution - whether the tests were successfully executed - but also passes a verdict on the item or items under test. To highlight this conceptual difference, both __data.outcome.verdict__ and __data.outcome.conclusion__ are included.
type: object
properties:
  meta:
    $ref: ../EiffelMetaProperty/3.0.0.yml
  data:
    type: object
    properties:
      outcome:
        _description: The outcome of the test suite.
        type: object
        properties:
          verdict:
            _description: |-
              A terse standardized verdict on the item or items under test. Unlike in [EiffelTestCaseFinishedEvent](./EiffelTestCaseFinishedEvent.md), this property is optional. It offers a method of summarizing the verdict of the test suite as a whole, but may be skipped.
              PASSED signifies that the item or items under test successfully passed the test suite.  
              FAILED signifies that the item or items under test failed to pass the test suite.  
              INCONCLUSIVE signifies that the verdict of the test suite was inconclusive. This SHOULD be the case if __data.outcome.conclusion__ is not __SUCCESSFUL__, but may in combination with a __SUCCESSFUL__ conclusion be used to represent unreliability or flakiness.
            type: string
            enum:
              - PASSED
              - FAILED
              - INCONCLUSIVE
          conclusion:
            _description: |-
              A terse standardized conclusion of the test suite, designed to be machine readable. Unlike in [EiffelTestCaseFinishedEvent](./EiffelTestCaseFinishedEvent.md), this property is optional. It offers a method of summarizing the conclusion of the test suite as a whole, but may be skipped.
              SUCCESSFUL signifies that the test suite was successfully concluded. Note that this does not imply that the item under test passed the tests.  
              FAILED signifies that the test suite could not be successfully executed. To exemplify, one or more tests failed to run due to required environments being unavailable.  
              ABORTED signifies that the test suite was aborted before it could be concluded.  
              TIMED_OUT signifies that the test suite did not conclude within the allowed time frame.  
              INCONCLUSIVE signifies that the outcome of the test suite could not be determined.
            type: string
            enum:
              - SUCCESSFUL
              - FAILED
              - ABORTED
              - TIMED_OUT
              - INCONCLUSIVE
          description:
            _description: A verbose description of the test suite outcome,
              designed to provide human readers with further information.
            type: string
        additionalProperties: false
      persistentLogs:
        _description: An array of persistent log files generated during
          execution.
        type: array
        items:
          type: object
          properties:
            mediaType:
              _description: The [media type](https://en.wikipedia.org/wiki/Media_type)
                of the URI's payload. Can be used to differentiate
                between various representations of the same log, e.g.
                text/html for human consumption and text/plain or application/json
                for the machine-readable form.
              type: string
            name:
              _description: The name of the log file.
              type: string
            tags:
              _description: Arbitrary tags and keywords that describe
                this log.
              type: array
              items:
                type: string
            uri:
              _description: The URI at which the log can be retrieved.
              type: string
          required:
            - name
            - uri
          additionalProperties: false
      customData:
        type: array
        items:
          $ref: ../EiffelCustomDataProperty/1.0.0.yml
    additionalProperties: false
  links:
    type: array
    items:
      $ref: ../EiffelEventLink/1.1.1.yml
required:
  - meta
  - data
  - links
additionalProperties: false
_links:
  CAUSE:
    description: 'Identifies a cause of the event occurring. SHOULD
      not be used in conjunction with __CONTEXT__: individual events
      providing __CAUSE__ within a larger context gives rise to ambiguity.
      It is instead recommended to let the root event of the context
      declare __CAUSE__.'
    required: false
    multiple: true
    targets:
      any_type: true
      types: []
  CONTEXT:
    description: Identifies the activity or test suite of which this
      event constitutes a part.
    required: false
    multiple: false
    targets:
      any_type: false
      types:
        - EiffelActivityTriggeredEvent
        - EiffelTestSuiteStartedEvent
  FLOW_CONTEXT:
    description: 'Identifies the flow context of the event: which is
      the continuous integration and delivery flow in which this occurred
      â€“ e.g. which product, project, track or version this is applicable
      to.'
    required: false
    multiple: true
    targets:
      any_type: false
      types:
        - EiffelFlowContextDefinedEvent
  TEST_SUITE_EXECUTION:
    description: Identifies the relevant test suite execution. In other
      words, [EiffelTestSuiteStartedEvent](../eiffel-vocabulary/EiffelTestSuiteStartedEvent.md)
      acts as a handle for a particular test suite execution.
    required: true
    multiple: false
    targets:
      any_type: false
      types:
        - EiffelTestSuiteStartedEvent
_history:
  - version: 3.2.0
    introduced_in: edition-lyon
    changes: Add links.domainId member (see [Issue 233](https://github.com/eiffel-community/eiffel/issues/233)).
  - version: 3.1.0
    introduced_in: edition-lyon
    changes: Add `data.persistentLogs.{mediaType,tags}`.
  - version: 3.0.0
    introduced_in: edition-agen
    changes: Improved information integrity protection (see [Issue
      185](https://github.com/eiffel-community/eiffel/issues/185)).
  - version: 2.0.0
    introduced_in: edition-agen
    changes: Introduced purl identifiers instead of GAVs (see [Issue
      182](https://github.com/eiffel-community/eiffel/issues/182))
  - version: 1.1.0
    introduced_in: edition-toulouse
    changes: Multiple links of type FLOW_CONTEXT allowed.
  - version: 1.0.0
    introduced_in: edition-bordeaux
    changes: Initial version.
_examples:
  - title: Simple example
    url: ../examples/events/EiffelTestSuiteFinishedEvent/simple.json
