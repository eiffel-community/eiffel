# Copyright 2017-2023 Ericsson AB and others.
# For a full list of individual contributors, please see the commit history.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
---
$schema: http://json-schema.org/draft-04/schema#
_abbrev: ED
_description: |-
  The EiffelEnvironmentDefinedEvent declares an environment which may be referenced from other events in order to secure traceability to the conditions under which an artifact was created or a test was executed. Depending on the technology domain, the nature of an environment varies greatly however: it may be a virtual image, a complete mechatronic system of millions of independent parts, or anything in between. Consequently, a concise yet complete and generic syntax for describing any environment is futile.

  From Eiffel's point of view, however, the prioritized concern is not _description_ of the environment, but rather unambiguous _identification_ of it. Consequently, the EiffelEnvironmentDefinedEvent syntax offers several alternatives to be selected from depending on the use case at hand: an environment may be described using __data.image__, __data.host__ or __data.uri__, or a __RUNTIME_ENVIRONMENT__ link to another event that provides a more comprehensive description. Unless a link of the latter kind is used exactly one of these properties SHOULD be included in any one event. In certain situations where an actual description of the environment is deemed redundant or its nature is implicit, the event MAY be used without any of these properties or a RUNTIME_ENVIRONMENT link; it should be noted, however, that _explicit_ practices are always encouraged over _implicit_ ones.
type: object
properties:
  meta:
    $ref: ../EiffelMetaProperty/3.1.0.yml
  data:
    type: object
    properties:
      name:
        _description: The name of the environment.
        type: string
      version:
        _description: The version of the environment, if any. This
          is in a sense redundant, as relationships between environments
          can be tracked via the __PREVIOUS_VERSION__ link type, but
          can be used for improved clarity and semantics.
        type: string
      image:
        _description: A string identifying e.g. a [Docker](https://www.docker.com/)
          image that defines this environment. Use of this member is
          discouraged. Prefer using the less ambiguous RUNTIME_ENVIRONMENT
          link type.
        type: string
      host:
        _description: An object identifying a host. This object is
          included for pragmatic reasons, as this method of environment
          identification is often used in practice. It is discouraged,
          however, as it is highly unreliable both in terms of consistency
          and traceability. Consistency because consecutive executions
          on the same host may produce different results, as there
          are no inherent guarantees that it will stay the same over
          time. Traceability because when analyzing the historical
          record you want a static description of the environment _as
          it was at the time of execution_, not a pointer to a dynamic
          entity which may or may not have changed since then (and
          may or may not have changed again the next time you inspect
          it).
        type: object
        properties:
          name:
            _description: The hostname.
            type: string
          user:
            _description: The user name on the host.
            type: string
        required:
          - name
          - user
        additionalProperties: false
      uri:
        _description: A URI identifying the environment description.
          This is the catch-all method of environment descriptions.
          Eiffel does not concern itself with the format or nature
          of the description, but merely points to its location.
        type: string
      customData:
        type: array
        items:
          $ref: ../EiffelCustomDataProperty/1.0.0.yml
    required:
      - name
    additionalProperties: false
  links:
    type: array
    items:
      $ref: ../EiffelEventLink/1.1.1.yml
required:
  - meta
  - data
  - links
additionalProperties: false
_links:
  CAUSE:
    description: 'Identifies a cause of the event occurring. SHOULD
      not be used in conjunction with __CONTEXT__: individual events
      providing __CAUSE__ within a larger context gives rise to ambiguity.
      It is instead recommended to let the root event of the context
      declare __CAUSE__.'
    required: false
    multiple: true
    targets:
      any_type: true
      types: []
  CONTEXT:
    description: Identifies the activity or test suite of which this
      event constitutes a part.
    required: false
    multiple: false
    targets:
      any_type: false
      types:
        - EiffelActivityTriggeredEvent
        - EiffelTestSuiteStartedEvent
  FLOW_CONTEXT:
    description: 'Identifies the flow context of the event: which is
      the continuous integration and delivery flow in which this occurred
      â€“ e.g. which product, project, track or version this is applicable
      to.'
    required: false
    multiple: true
    targets:
      any_type: false
      types:
        - EiffelFlowContextDefinedEvent
  PREVIOUS_VERSION:
    description: Identifies a latest previous version (there may be
      more than one in case of merges) of the environment.
    required: false
    multiple: true
    targets:
      any_type: false
      types:
        - EiffelEnvironmentDefinedEvent
  RUNTIME_ENVIRONMENT:
    description: Identifies a description of a runtime environment
      within which an activity has taken place. The target event could
      e.g. identify a [Docker](https://www.docker.com/) image, a JVM
      distribution archive, or a composition of operating system packages
      that were installed on the host system. This link type has the
      same purpose as the `data.image` member but allows richer and
      less ambiguous descriptions.
    required: false
    multiple: true
    targets:
      any_type: false
      types:
        - EiffelArtifactCreatedEvent
        - EiffelCompositionDefinedEvent
_history:
  - version: 3.3.0
    introduced_in: edition-arica
    changes: Add schema URL to the meta object (see [Issue 280](https://github.com/eiffel-community/eiffel/issues/280)).
  - version: 3.2.0
    introduced_in: edition-lyon
    changes: Add links.domainId member (see [Issue 233](https://github.com/eiffel-community/eiffel/issues/233)).
  - version: 3.1.0
    introduced_in: edition-lyon
    changes: Added RUNTIME_ENVIRONMENT link type.
  - version: 3.0.0
    introduced_in: edition-agen
    changes: Improved information integrity protection (see [Issue
      185](https://github.com/eiffel-community/eiffel/issues/185)).
  - version: 2.0.0
    introduced_in: edition-agen
    changes: Introduced purl identifiers instead of GAVs (see [Issue
      182](https://github.com/eiffel-community/eiffel/issues/182))
  - version: 1.1.0
    introduced_in: edition-toulouse
    changes: Multiple links of type FLOW_CONTEXT allowed.
  - version: 1.0.0
    introduced_in: edition-bordeaux
    changes: Initial version.
_examples:
  - title: URI example
    url: ../examples/events/EiffelEnvironmentDefinedEvent/uri.json
  - title: Host example
    url: ../examples/events/EiffelEnvironmentDefinedEvent/host.json
  - title: Image example
    url: ../examples/events/EiffelEnvironmentDefinedEvent/image.json
  - title: RUNTIME_ENVIRONMENT link example
    url: ../examples/events/EiffelEnvironmentDefinedEvent/runtime-env-link.json
